/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiDocumentation);
  }
}(this, function(expect, ApiDocumentation) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Holding', function() {
      beforeEach(function() {
        instance = new ApiDocumentation.Holding();
      });

      it('should create an instance of Holding', function() {
        // TODO: update the code to test Holding
        expect(instance).to.be.a(ApiDocumentation.Holding);
      });

      it('should have the property stock (base name: "stock")', function() {
        // TODO: update the code to test the property stock
        expect(instance).to.have.property('stock');
        // expect(instance.stock).to.be(expectedValueLiteral);
      });

      it('should have the property avgPrice (base name: "avgPrice")', function() {
        // TODO: update the code to test the property avgPrice
        expect(instance).to.have.property('avgPrice');
        // expect(instance.avgPrice).to.be(expectedValueLiteral);
      });

      it('should have the property currentPrice (base name: "currentPrice")', function() {
        // TODO: update the code to test the property currentPrice
        expect(instance).to.have.property('currentPrice');
        // expect(instance.currentPrice).to.be(expectedValueLiteral);
      });

      it('should have the property amount (base name: "amount")', function() {
        // TODO: update the code to test the property amount
        expect(instance).to.have.property('amount');
        // expect(instance.amount).to.be(expectedValueLiteral);
      });

      it('should have the property value (base name: "value")', function() {
        // TODO: update the code to test the property value
        expect(instance).to.have.property('value');
        // expect(instance.value).to.be(expectedValueLiteral);
      });

    });
  });

}));

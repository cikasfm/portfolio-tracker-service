/*
 * Api Documentation
 * Api Documentation
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.19
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ApiDocumentation) {
      root.ApiDocumentation = {};
    }
    root.ApiDocumentation.Trade = factory(root.ApiDocumentation.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The Trade model module.
   * @module model/Trade
   * @version 1.0
   */

  /**
   * Constructs a new <code>Trade</code>.
   * @alias module:model/Trade
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>Trade</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Trade} obj Optional instance to populate.
   * @return {module:model/Trade} The populated <code>Trade</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'String');
      if (data.hasOwnProperty('stock'))
        obj.stock = ApiClient.convertToType(data['stock'], 'String');
      if (data.hasOwnProperty('direction'))
        obj.direction = ApiClient.convertToType(data['direction'], 'String');
      if (data.hasOwnProperty('price'))
        obj.price = ApiClient.convertToType(data['price'], 'Number');
      if (data.hasOwnProperty('quantity'))
        obj.quantity = ApiClient.convertToType(data['quantity'], 'Number');
      if (data.hasOwnProperty('value'))
        obj.value = ApiClient.convertToType(data['value'], 'Number');
    }
    return obj;
  }

  /**
   * Date/Time of the transaction
   * @member {String} timestamp
   */
  exports.prototype.timestamp = undefined;

  /**
   * Stock name
   * @member {String} stock
   */
  exports.prototype.stock = undefined;

  /**
   * Trade direction:  * `buy` - Stock purchase ( buy )  * `sell` - Stock liquidation ( sell ) 
   * @member {module:model/Trade.DirectionEnum} direction
   */
  exports.prototype.direction = undefined;

  /**
   * Stock price
   * @member {Number} price
   */
  exports.prototype.price = undefined;

  /**
   * Amount of stocks traded
   * @member {Number} quantity
   */
  exports.prototype.quantity = undefined;

  /**
   * Total dollar value of stocks traded ( quantity * price )
   * @member {Number} value
   */
  exports.prototype.value = undefined;



  /**
   * Allowed values for the <code>direction</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DirectionEnum = {
    /**
     * value: "buy"
     * @const
     */
    buy: "buy",

    /**
     * value: "sell"
     * @const
     */
    sell: "sell"
  };

  return exports;

}));
